server:
  port: 8080

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true # Optional: for consistency, e.g., product-service instead of PRODUCT-SERVICE
      routes:
        - id: product-service-route
          uri: lb://product-service # Eureka service ID (assuming lower-case due to above setting)
          predicates:
            - Path=/api/products/**
          filters:
            - name: CircuitBreaker
              args:
                name: productServiceCircuitBreaker
                fallbackUri: forward:/fallback/product-service
            # Example of RewritePath if product-service expects /products/* instead of /api/products/*
            # - RewritePath=/api/products/(?<segment>.*), /products/${segment}

        - id: inventory-service-route
          uri: lb://inventory-service
          predicates:
            - Path=/api/inventory/**
          filters:
            - name: CircuitBreaker
              args:
                name: inventoryServiceCircuitBreaker
                fallbackUri: forward:/fallback/inventory-service

        - id: order-service-route
          uri: lb://order-service
          predicates:
            - Path=/api/orders/**
          filters:
            - name: CircuitBreaker
              args:
                name: orderServiceCircuitBreaker
                fallbackUri: forward:/fallback/order-service

        - id: payment-service-route
          uri: lb://payment-service
          predicates:
            - Path=/api/payments/**
          filters:
            - name: CircuitBreaker
              args:
                name: paymentServiceCircuitBreaker
                fallbackUri: forward:/fallback/payment-service
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://keycloak:8080/realms/microservices-realm/protocol/openid-connect/certs
          issuer-uri: http://localhost:8180/realms/microservices-realm
          # audiences:
          #   - account
          #   - api-gateway-client
  data:
    redis:
      host: redis # Docker service name
      port: 6379

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/ # Placeholder
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    configs:
      default:
        failureRateThreshold: 50 # Percentage
        slidingWindowSize: 10 # Number of requests in a closed state
        permittedNumberOfCallsInHalfOpenState: 5 # Number of requests in half-open state
        waitDurationInOpenState: 10s # Duration to wait in open state
        # registerHealthIndicator: true # To show circuit breaker status in health endpoint
    instances:
      productServiceCircuitBreaker:
        baseConfig: default
      inventoryServiceCircuitBreaker:
        baseConfig: default
      orderServiceCircuitBreaker:
        baseConfig: default
      paymentServiceCircuitBreaker:
        baseConfig: default
  # Optional: Configure TimeLimiters if needed
  # timelimiter:
  #   configs:
  #     default:
  #       timeoutDuration: 2s # Example timeout
  #   instances:
  #     productServiceCircuitBreaker: # Can apply to the same name to combine
  #       baseConfig: default

logging:
  level:
    org.springframework.cloud.gateway: TRACE # For debugging gateway routes and filters
    com.example.microservices.apigateway: DEBUG # For custom filters and controllers
    reactor.netty.http.client: DEBUG # For low-level HTTP client logging if needed
    io.lettuce.core: DEBUG # For Redis client logging if needed
    # io.github.resilience4j: DEBUG # For Resilience4j logging if needed
